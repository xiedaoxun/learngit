linux:
  1.安装git：sudo apt-get install git
  2.把当前目录变成git可管理的仓库：git init
  3.添加文件，可以添加多个：git add [filename] 
  4.提交文件，git commit -m "xxx"，-m:提交说明
  5.查看工作区状态:git status
  6.查看修改内容:git diff
  7.HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。
  8.穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
  9.要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本
  10.场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
  11. 场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
  12.场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
  13.git push [origin] [master]:提交[master]分支的最新修改到GitHub
  14.查看分支：git branch
  15.创建分支：git branch <name>
  16.切换分支：git checkout <name>
  17.创建+切换分支：git checkout -b <name>
  18.合并某分支到当前分支：git merge <name>
  19.删除分支：git branch -d <name>
  20.当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。
     解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。
     用git log --graph命令可以看到分支合并图
aaa
